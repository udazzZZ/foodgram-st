apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.postgres.statefulsetName }}
  namespace: {{ .Values.namespace }}
spec:
  serviceName: {{ .Values.postgres.headlessService.name }}
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.postgres.appLabel }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgres.appLabel }}
    spec:
      containers:
        - name: postgresql
          image: {{ .Values.postgres.image }}
          imagePullPolicy: {{ .Values.postgres.imagePullPolicy }}
          env:
            - name: PGDATA
              value: "{{ .Values.postgres.pgData }}"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secret.name }}
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secret.name }}
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secret.name }}
                  key: POSTGRES_DB
          ports:
            - name: postgresql
              containerPort: {{ .Values.postgres.port }}
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: {{ .Values.postgres.dataPath }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: "{{ .Values.postgres.storage }}"
