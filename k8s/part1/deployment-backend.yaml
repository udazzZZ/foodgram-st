apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: foodgram
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
      - name: wait-for-db
        image: postgres:17
        command: ["sh", "-c"]
        args:
          - |
            echo "Waiting for PostgreSQL to be ready..."
            until pg_isready -h $DB_HOST -p $DB_PORT; do
              sleep 2
            done
            echo "PostgreSQL is ready!"
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: POSTGRES_PASSWORD
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: POSTGRES_DB
          - name: DB_HOST
            value: "postgres-headless-svc.foodgram.svc.cluster.local"
          - name: DB_PORT
            value: "5432"

      containers:
      - name: backend
        image: udazzzz/foodgram_backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: POSTGRES_PASSWORD
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: POSTGRES_DB
          - name: DB_HOST
            value: "postgres-headless-svc.foodgram.svc.cluster.local"
          - name: DB_PORT
            value: "5432"
          - name: MEDIA_ROOT
            value: "/app/media"
        volumeMounts:
        - name: media-files
          mountPath: /app/media

      volumes:
      - name: media-files
        persistentVolumeClaim:
          claimName: media-pvc
